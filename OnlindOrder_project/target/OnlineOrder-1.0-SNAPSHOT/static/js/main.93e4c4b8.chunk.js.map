{"version":3,"sources":["logo.svg","utils.js","components/loginForm.js","components/SignUpForm.js","components/MyCart.js","components/FoodList.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","username","password","loginUrl","fetch","method","headers","credentials","then","response","console","log","status","Error","signup","new_user_data","body","JSON","stringify","LoginForm","state","loading","onFinish","values","setState","message","success","props","onSuccess","catch","err","error","finally","name","style","width","margin","this","Item","rules","required","prefix","UserOutlined","className","placeholder","Password","LockOutlined","type","htmlType","Component","SignUpForm","displayModal","signupOnClick","handleCancel","shape","onClick","title","visible","onCancel","footer","destroyOnClose","initialValues","remember","preserve","Text","Typography","MyCart","useState","cartVisible","setCartVisible","cartData","setCartData","setLoading","checking","useEffect","json","data","onCloseDrawer","onClose","display","justifyContent","Strong","totalPrice","marginRight","disable","orderItemList","itemLayout","dataSource","renderItem","item","Meta","menuItem","description","price","Option","Select","AddToCartButton","itemId","icon","PlusOutlined","addItemUrl","addItemToCart","FoodList","restaurants","setRestaurants","curRest","setCurRest","loadingRest","foodData","restId","onSelect","onChange","map","value","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","extra","src","imageUrl","alt","height","Header","Layout","Content","Title","App","authed","setAuthed","level","color","lineHeight","marginButtom","fontWeight","fontSize","fontFamily","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93e4c4b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//login APi\r\n//因为不是default，所以每次都得是实例化\r\nexport const login = (credential) => { //公开之后可以直接引用, 回调函数\r\n    //credential : {username: value, password:value}\r\n    //request option: url, http method, data\r\n    const{username, password} = credential;  //step 1: get login info\r\n    const loginUrl = `/login?username=${username}&password=${password}`; //step 2: organize my login url\r\n    //注意：一般时候用户名和密码不会直接放url上，通常都是加密，要不然GG\r\n\r\n    //以下是获取。 https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters\r\n    //一般来说不怎么用fetch，因为兼容性不太行\r\n    return fetch(loginUrl, { //3, send request\r\n        method:\"POST\",\r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n        },\r\n        credentials:\"include\"\r\n\r\n    }).then( response => { //4, receive backend response\r\n        console.log(response)\r\n        //case 1: login successful\r\n        //case 2: login fail\r\n        if(response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to log in\"); //直接login fail问题\r\n        }\r\n    })\r\n}\r\n\r\nexport const signup = (new_user_data) => {\r\n    const signupUrl = `/signup`; //postman signup web\r\n\r\n    return fetch(signupUrl, {\r\n        method:\"POST\",\r\n        headers: {\r\n            \"Content-Type\":\"application/json\",\r\n        },\r\n        body: JSON.stringify(new_user_data),\r\n    }).then(response => {\r\n        if(response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Sign Up Fail!\");\r\n        }\r\n    })\r\n}\r\n\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json(); //get method无需post那样需要网址。相反，直接fetch直接获取\r\n    })\r\n}\r\n\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};\r\n\r\n//menu,restaurants, add to cart\\\r\nexport const getMenu = (restId) => {\r\n    return fetch(`restaurant/${restId}/menu`).then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const getRestaurants = () => {\r\n    return fetch(`restaurant/`).then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurant\");\r\n        }\r\n\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport const addItemToCart = (itemId) => {\r\n\r\n    const addItemUrl = `/order/${itemId}`; //step 2: organize my login url\r\n\r\n    return fetch(addItemUrl,{\r\n        method:\"POST\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        credentials:\"include\"\r\n    } ).then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add item to shipping cart\");\r\n        }\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react'; //rcc + tab\r\n\r\nimport{Form, Input, Button, Checkbox, message} from \"antd\";\r\nimport {UserOutlined, LockOutlined} from \"@ant-design/icons\";\r\nimport {login} from \"../utils\";\r\n\r\nclass LoginForm extends Component {\r\n    state = { //初始状态\r\n        loading:false,\r\n    };\r\n\r\n    onFinish = (values) => { //定义为函数\r\n        console.log('Received values of form: ', values);\r\n        this.setState({loading:true}); //loading button is true\r\n\r\n        login(values)\r\n            .then(() => {\r\n                //login succesfuly\r\n                //inform user\r\n                //inform parent component App logged in\r\n                //子传父路径\r\n                message.success(\"Login successful\");\r\n                this.props.onSuccess();\r\n            })\r\n            .catch( err => {\r\n                //login fail\r\n                //inform user\r\n                console.log(\"sdsdsd\")\r\n                message.error(err.message);\r\n            })\r\n            .finally( () => {\r\n                //do whatever\r\n                //set button to not loading ---> reset button\r\n                this.setState({loading:false});\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                style = {{\r\n                    width:\"300px\",\r\n                    margin:\"auto\"\r\n                }}\r\n                onFinish={this.onFinish}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Username!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Password!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password //小眼睛\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading = {this.state.loading}>\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm; //向外公开","import React, {Component} from 'react';\r\nimport {Button, Modal, Form, message, Input} from \"antd\"\r\nimport {signup} from \"../utils\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\"; //lockOutline是密码圈圈， useroutline没有圈圈\r\n\r\n\r\nclass SignUpForm extends Component {\r\n    state = {\r\n        displayModal: false //用于弹窗来显示注册信息\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal:true\r\n        })\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal:false\r\n        })\r\n    };\r\n\r\n    onFinish =(new_user_data) => {\r\n        signup(new_user_data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal:false\r\n                });\r\n                message.success(\"Sign up successfully!\")\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message)\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button shape = \"square\" type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n\r\n                <Modal title=\"Register\" visible = {this.state.displayModal} onCancel={this.handleCancel} footer={null} destroyOnClose={true}>\r\n                    <Form name=\"Normal Registration\" initialValues={{remember:true}} onFinish={this.onFinish} preserve={false}>\r\n\r\n                        <Form.Item name=\"email\"  rules={[{required:true, message:\"Please enter your email!\"}]}>\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"password\"  rules={[{required:true, message:\"Please enter your password\"}]}>\r\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"firstname\"  rules={[{required:true, message:\"Please enter your firstname!\"}]}>\r\n                            <Input  placeholder=\"Firstname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"lastname\" rules={[{required:true, message:\"Please enter your lastname\"}]}>\r\n                            <Input placeholder=\"Lastname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type = \"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpForm;","import {useEffect, useState} from \"react\";\r\nimport {List, Button, Drawer, Typography, message} from \"antd\";\r\nimport {getCart} from \"../utils\";\r\n\r\nconst{Text} = Typography;\r\n\r\nconst MyCart = () =>{\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    const [cartData, setCartData] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(!cartVisible) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        getCart()\r\n            .then((data) => {\r\n                setCartData(data);\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [cartVisible]);\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    }\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Button type = \"primary\" shape=\"square\" onClick={onOpenDrawer}>\r\n                cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={520}\r\n                footer={\r\n                    <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Text Strong={true}>{`Total Price: $${cartData?.totalPrice}`}</Text>\r\n                        <div>\r\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button onClick={onCloseDrawer} style={{marginRight: 8}} type=\"primary\" loading={checking} disable={loading || cartData?.orderItemList === 0}>\r\n                                Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List loading={loading} itemLayout=\"horizontal\" dataSource={cartData?.orderItemList} renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            title={item.menuItem.name}\r\n                            description={`$${item.price}`}\r\n                        />\r\n                    </List.Item>\r\n                )} />\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyCart;","import React, {Component, useState,useEffect} from 'react';\r\nimport {addItemToCart, addToCart, getMenu, getRestaurants} from \"../utils\";\r\nimport {Button, Select, Tooltip, message, List, Card} from \"antd\";\r\nimport {PlusOutlined} from \"@ant-design/icons\"\r\n\r\nconst {Option} = Select\r\n\r\nconst AddToCartButton = itemId => {\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    const AddToCart = () =>{\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then(() => {\r\n                message.success(\"Successfully add item\")\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Tooltip title =\"Add to shopping cart\">\r\n            <Button loading={loading} type=\"primary\" icon={<PlusOutlined />} onClick={AddToCart} />\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nconst FoodList =()=> {\r\n    const [loading, setLoading] = useState(false);\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [curRest, setCurRest] = useState();\r\n    const [loadingRest, setLoadingRest] = useState(false);\r\n    const [foodData, setFoodData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getRestaurants()\r\n            .then(data => {\r\n                setRestaurants(data);\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <Select restId={curRest} onSelect={restId => setCurRest(restId)} placeholder=\"Select a restaurant\" loading={loadingRest}\r\n            style={{width:300}} onChange={() => {}}>\r\n                {restaurants.map((item) => {\r\n                    return <Option value={item.id}>{item.name}</Option>\r\n                })}\r\n            </Select>\r\n            {curRest && (\r\n                <List\r\n                    style ={{marginTop:20}}\r\n                    loading={loading}\r\n                    grid={{\r\n                        gutter:16,\r\n                        xs:1,\r\n                        sm:2,\r\n                        md:4,\r\n                        lg:5,\r\n                        xl:3,\r\n                        xxl:3,\r\n                    }}\r\n                    dataSource={foodData}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <Card title={item.name} extra={<AddToCartButton itemId={item.id} />}>\r\n                                <img src={item.imageUrl} alt={item.name} style={{ height: 340, width: \"100%\", display: \"block\" }}/>\r\n                                {`Price: ${item.price}`}\r\n                            </Card>\r\n                        </List.Item>)\r\n                } />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default FoodList;","import logo from './logo.svg';\nimport { Layout, Typography } from \"antd\";\nimport React, {useState} from \"react\"\nimport LoginForm from \"./components/loginForm\";\nimport SignupForm from \"./components/SignUpForm\";\nimport MyCart from \"./components/MyCart\";\nimport FoodList from \"./components/FoodList\";\nimport './App.css';\n\n\n\nconst{Header, Content} = Layout;\nconst{Title} = Typography;\nfunction App() {\n    //函数组件要hook\n    const [authed, setAuthed] = useState(false); //没登入的时候\n\n  return (\n      <Layout style = {{height: \"100vh\"}}>\n        <Header>\n            <div className=\"header\">\n                <Title level={2} style={{color:\"white\", lineHeight:\"inherit\", marginButtom:0, fontWeight: \"bold\", fontSize:35, fontFamily:\"Times New Roman\"}}>\n                    Food Order\n                </Title>\n                <div>\n                    {\n                        authed? <MyCart />:<SignupForm />\n                    }\n                </div>\n            </div>\n\n        </Header>\n        <Content style = {{\n          padding:\"50px\",\n          maxHeight:\"calc(100% - 64px)\",\n          overflowY:\"auto\"\n        }}>\n            { //判断是否logged in了。我要把loginForm的信息回传给app这个函数\n                authed? <div> <FoodList /></div> : <LoginForm onSuccess={()=>setAuthed(true)} />  //回到loginform是第20行\n            }\n        </Content>\n      </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//这儿是真实dom和虚拟dom对接\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}